---
layout: post
title: GPU渲染管线
date  2015-08-08 00:00:00 +0700
categories: uncategorized
tags:
- youxi
---

## GPU渲染管线：

```

GPU渲染管线可以简单的理解成为渲染图像的流程（传进去的是顶点数据，光源模式，材质属性等数据等）
经过GPU渲染管线这一套流程加工处理之后，产出的就是渲染出来的图像。

```

先来一个参考图：

![]({{site.url}}/images/GPU渲染流程.jpg)

图像绘制管线分为三个主要阶段：应用程序阶段、几何阶段、光栅阶段

### 应用程序阶段

```

所谓的应用程序阶段：使用高级编程语言进行开发，诸如碰撞检测、场景图建立、视锥裁剪
等经典算法都在此阶段执行。在该阶段的末端，几何体数据（顶点坐标、法向量、纹理坐标、纹理等）通过数据总线
传送到图形硬件。

```

### 几何阶段

```

主要负责顶点坐标变换、光照、裁剪、投影以及屏幕映射，该阶段基于GPU进行运算，
在该阶段的末端得到了经过变换和投影之后的顶点坐标、。根据顶点和索引，还原出
特有网格结构，然后进行图元装配。（注意：裁减不仅仅包括视域剔除，还包括背部消隐等）

```
### 光栅阶

```

基于几何阶段的输出数据，为像素（Pixel）正确配色，以便绘制完整图像，该阶段进行的都是
单个像素的操作，每个像素的信息存储在颜色缓冲器（frame buffer）中.一般情况下，GPU帮
我们自动完成了这个转换。基于GPU的顶点程序为开发人员提供了控制顶点坐标空间转换的方法。


```

### 几何阶段－详解

```

这个阶段，输入到计算机中的是一系列三维坐标点，但是我们最终需要看到的是，从视点出发观察到的特定点
(可以理解为，如何在二维屏幕上面看到3D的效果)
根据顶点坐标变换的先后顺序，主要有如下几个坐标空间，或者说坐标类型：Object space，
模型坐标空间；World space，世界坐标系空间；Eye space，观察坐标空间；
Clip and Project space，屏幕坐标空间。最后根据索引，装配图元，然后进行一些裁减，消隐等操作，

```

裁切图示：

![]({{site.url}}/images/GPU视锥体.png)
注意：裁切的部分是进裁切面和远裁切面之间的部分。


### 光栅化阶段－详解

```
这一阶段，主要进行纹理操作，颜色混合（alpha通道，Blending操作），
最后填充计算好的像素颜色（填充到Frame 帧缓冲，然后显示）。
注意：如果颜色均不透明，且存在遮挡关系，怎么决定，填充什么颜色？
其实，在这个过程中，会有一个Z－Buffer缓存，用来确定遮挡关系，里摄像机最近的点的颜色自然会遮挡住后者，
最终渲染出离摄像机进的颜色。

```
